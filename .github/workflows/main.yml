name: Google Drive Service Account Test

on:
  workflow_dispatch:

jobs:
  test-drive:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Python Google API client
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          pip3 install google-api-python-client google-auth google-auth-httplib2 google-auth-oauthlib

      - name: Write service_account.json from secret
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Create test file
        run: echo "Hello SIGMA from GitHub Actions 🚀" > test.txt

      - name: Upload + Download + List files
        run: |
          python3 - <<'PY'
          from google.oauth2 import service_account
          from googleapiclient.discovery import build
          from googleapiclient.http import MediaFileUpload, MediaIoBaseDownload
          import io

          SERVICE_ACCOUNT_FILE = "service_account.json"
          SCOPES = ["https://www.googleapis.com/auth/drive"]
          FOLDER_ID = "191AWhGPc0j--SFCDnUPSG1sFDCr-CauX"

          creds = service_account.Credentials.from_service_account_file(
              SERVICE_ACCOUNT_FILE, scopes=SCOPES
          )
          drive = build("drive", "v3", credentials=creds)

          # رفع الملف
          file_metadata = {"name": "test.txt", "parents": [FOLDER_ID]}
          media = MediaFileUpload("test.txt", resumable=True)
          uploaded = drive.files().create(
              body=file_metadata,
              media_body=media,
              fields="id",
              supportsAllDrives=True
          ).execute()
          file_id = uploaded.get("id")
          print("✅ Uploaded file ID:", file_id)

          # تنزيل الملف
          request = drive.files().get_media(fileId=file_id)
          fh = io.FileIO("downloaded_test.txt", "wb")
          downloader = MediaIoBaseDownload(fh, request)
          done = False
          while not done:
              status, done = downloader.next_chunk()
          print("⬇️ Downloaded file as downloaded_test.txt")

          # لستة كل الملفات الموجودة
          print("\\n📂 Files currently in the folder:")
          results = drive.files().list(
              q=f"'{FOLDER_ID}' in parents and trashed=false",
              fields="files(id, name)",
              supportsAllDrives=True,
              includeItemsFromAllDrives=True
          ).execute()
          for f in results.get("files", []):
              print(f"- {f['name']} (ID: {f['id']})")
          PY

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: downloaded_test
          path: downloaded_test.txt
