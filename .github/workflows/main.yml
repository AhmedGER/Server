name: 🚀 Google Drive Test

on:
  workflow_dispatch:

jobs:
  test-drive:
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout repo
        uses: actions/checkout@v3

      - name: 📦 Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client

      - name: 🔍 Check if service_account.json exists
        run: |
          if [ -f "service_account.json" ]; then
            echo "✅ service_account.json found!"
          else
            echo "❌ service_account.json NOT found!"
            exit 1
          fi

      - name: 🔑 Print private key
        run: |
          cat service_account.json | jq -r .private_key

      - name: ✅ Validate JSON
        run: |
          python3 - <<'PY'
          import json
          with open("service_account.json") as f:
              data = json.load(f)
          print("✅ JSON is valid")
          PY

      - name: 🔐 Authenticate with Google
        run: |
          python3 - <<'PY'
          from google.oauth2 import service_account
          from googleapiclient.discovery import build

          scopes = ["https://www.googleapis.com/auth/drive"]
          creds = service_account.Credentials.from_service_account_file("service_account.json", scopes=scopes)
          service = build("drive", "v3", credentials=creds, cache_discovery=False)

          about = service.about().get(fields="user").execute()
          print("✅ Authenticated as:", about["user"]["displayName"], "-", about["user"]["emailAddress"])
          PY

      - name: 📂 Create folder in Google Drive
        run: |
          python3 - <<'PY'
          from google.oauth2 import service_account
          from googleapiclient.discovery import build

          scopes = ["https://www.googleapis.com/auth/drive"]
          creds = service_account.Credentials.from_service_account_file("service_account.json", scopes=scopes)
          service = build("drive", "v3", credentials=creds, cache_discovery=False)

          folder_metadata = {
              "name": "WorkflowTestFolder",
              "mimeType": "application/vnd.google-apps.folder"
          }
          folder = service.files().create(body=folder_metadata, fields="id").execute()
          print("📂 Folder created with ID:", folder.get("id"))
          PY
